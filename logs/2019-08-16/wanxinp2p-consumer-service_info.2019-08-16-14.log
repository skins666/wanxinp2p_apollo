[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:37,641 INFO [main][DefaultApplicationProvider.java:85] - App ID is set to consumer-service by app.id property from System Property
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:37,653 INFO [main][DefaultServerProvider.java:108] - Environment is set to [dev] by JVM system property 'env'.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:37,719 WARN [main][DefaultMetaServerProvider.java:39] - Could not find meta server address, because it is not available in neither (1) JVM system property 'apollo.meta', (2) OS env variable 'APOLLO_META' (3) property 'apollo.meta' from server.properties nor (4) property 'apollo.meta' from app.properties
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:37,727 INFO [main][MetaDomainConsts.java:93] - Located meta server address http://localhost:8080 for env DEV from com.ctrip.framework.apollo.core.internals.LegacyMetaServerProvider
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:38,078 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:40,323 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:40,327 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:40,384 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 38ms. Found 0 repository interfaces.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:40,555 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:40,725 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'com.ctrip.framework.apollo.spring.boot.ApolloAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,000 INFO [main][GenericScope.java:294] - BeanFactory id=011e5072-34cd-3993-a87d-9103c97d38a2
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,028 WARN [main][PropertySourcesDeducer.java:75] - Multiple PropertySourcesPlaceholderConfigurer beans registered [propertySourcesPlaceholderConfigurer, org.springframework.context.support.PropertySourcesPlaceholderConfigurer], falling back to Environment
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,100 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'cn.itcast.wanxinp2p.consumer.agent.AccountApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,104 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'cn.itcast.wanxinp2p.consumer.agent.DepositoryAgentApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,131 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,140 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration$$EnhancerBySpringCGLIB$$e5e27624] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,159 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketmq-org.apache.rocketmq.spring.autoconfigure.RocketMQProperties' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,375 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'defaultMQProducer' of type [org.apache.rocketmq.client.producer.DefaultMQProducer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,379 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$18dfe6b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,384 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$cb2ca8d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,387 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$86438ec1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,394 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,397 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,423 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$ad0f05ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,436 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,437 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$faeb8448] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,551 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,552 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,562 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,570 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:41,623 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:42,356 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketMQTemplate' of type [org.apache.rocketmq.spring.core.RocketMQTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:42,368 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'transactionHandlerRegistry' of type [org.apache.rocketmq.spring.config.TransactionHandlerRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:42,488 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd4c6728] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:42,923 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:42,955 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:42,959 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'hmilyFeignConfiguration' of type [org.dromara.hmily.springcloud.configuration.HmilyFeignConfiguration$$EnhancerBySpringCGLIB$$eb9d7ff4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:43,012 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d9666a25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:43,592 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 53050 (http)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:43,613 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-53050"]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:43,627 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:43,629 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:43,645 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_171\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\jdk1.8.0_171\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\MySQL\MySQL Utilities 1.6\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\TortoiseGit\bin;C:\Users\apple\AppData\Local\Microsoft\WindowsApps;E:\apache-maven-3.5.4\bin;;.]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:43,871 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:43,871 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 5748 ms
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:44,125 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:44,127 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:44,145 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5213b887
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:44,342 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:44,825 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:46,093 INFO [main][HikariDataSource.java:110] - HikariPool-1 - Starting...
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:46,138 INFO [main][HikariDataSource.java:123] - HikariPool-1 - Start completed.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:46,454 INFO [main][HmilyLogo.java:49] - 


    __  __          _ __     
   / / / /___ ___  (_) /_  __
  / /_/ / __ `__ \/ / / / / /
 / __  / / / / / / / / /_/ / 
/_/ /_/_/ /_/ /_/_/_/\__, /  
                    /____/   

 :: Hmily :: (v2.0.5-RELEASE)

[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:46,472 INFO [main][AutowiredAnnotationBeanPostProcessor.java:342] - Inconsistent constructor declaration on bean with name 'hmilyTransactionSelfRecoveryScheduled': single autowire-marked constructor flagged as optional - this constructor is effectively required since there is no default constructor to fall back to: public org.dromara.hmily.core.schedule.HmilyTransactionSelfRecoveryScheduled(org.dromara.hmily.common.config.HmilyConfig)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:48,543 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:48,712 INFO [main][PropertySourcedRequestMappingHandlerMapping.java:69] - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:48,744 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:48,744 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:48,978 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:50,666 INFO [main][InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:50,737 INFO [main][DiscoveryClient.java:349] - Initializing Eureka in region us-east-1
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:51,177 INFO [main][DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:51,177 INFO [main][DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:51,422 INFO [main][DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:51,424 INFO [main][DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:51,832 INFO [main][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:51,918 INFO [main][DiscoveryClient.java:958] - Disable delta property : false
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:51,919 INFO [main][DiscoveryClient.java:959] - Single vip registry refresh property : null
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:51,919 INFO [main][DiscoveryClient.java:960] - Force full registry fetch : false
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:51,919 INFO [main][DiscoveryClient.java:961] - Application is null : false
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:51,919 INFO [main][DiscoveryClient.java:962] - Registered Applications size is zero : true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:51,920 INFO [main][DiscoveryClient.java:964] - Application version is -1: true
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:51,920 INFO [main][DiscoveryClient.java:1047] - Getting all instance registry info from the eureka server
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:52,269 INFO [main][DiscoveryClient.java:1056] - The response status is 200
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:52,274 INFO [main][DiscoveryClient.java:1270] - Starting heartbeat executor: renew interval is: 30
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:52,281 INFO [main][InstanceInfoReplicator.java:60] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:52,287 INFO [main][DiscoveryClient.java:449] - Discovery Client initialized at timestamp 1565938252284 with initial instances count: 4
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:52,291 INFO [main][EurekaServiceRegistry.java:42] - Registering application CONSUMER-SERVICE with eureka with status UP
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:52,293 INFO [main][DiscoveryClient.java:1305] - Saw local status change event StatusChangeEvent [timestamp=1565938252292, current=UP, previous=STARTING]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:52,297 INFO [main][DocumentationPluginsBootstrapper.java:160] - Context refreshed
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:52,305 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_CONSUMER-SERVICE/consumer-service:192.168.2.153:53050: registering service...
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:52,316 INFO [main][DocumentationPluginsBootstrapper.java:163] - Found 1 custom documentation plugin(s)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:52,358 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_CONSUMER-SERVICE/consumer-service:192.168.2.153:53050 - registration status: 204
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:52,363 INFO [main][ApiListingReferenceScanner.java:41] - Scanning for api listing references
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:52,702 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-53050"]
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:52,748 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 53050 (http) with context path '/consumer'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:52,750 INFO [main][EurekaAutoServiceRegistration.java:141] - Updating port to 53050
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:52,755 INFO [main][StartupInfoLogger.java:59] - Started ConsumerService in 17.363 seconds (JVM running for 21.213)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:53,329 INFO [RMI TCP Connection(4)-127.0.0.1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:53,329 INFO [RMI TCP Connection(4)-127.0.0.1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:50:53,354 INFO [RMI TCP Connection(4)-127.0.0.1][FrameworkServlet.java:546] - Completed initialization in 25 ms
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:52:47,608 INFO [hmilyTransaction-hmily-transaction-self-recovery-14][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:52:47,855 INFO [hmilyTransaction-hmily-transaction-self-recovery-28][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:52:52,703 INFO [hmilyTransaction-hmily-transaction-self-recovery-42][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:53:47,630 INFO [hmilyTransaction-hmily-transaction-self-recovery-14][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:53:47,859 INFO [hmilyTransaction-hmily-transaction-self-recovery-28][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:53:52,704 INFO [hmilyTransaction-hmily-transaction-self-recovery-42][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:20,871 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE MOBILE = ? 
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:20,966 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - ==> Parameters: 15378791983(String)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:20,992 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - <==      Total: 1
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,012 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,BANK_CODE,BANK_NAME,CARD_NUMBER,MOBILE,STATUS FROM bank_card WHERE CARD_NUMBER = ? 
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,013 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - ==> Parameters: 6226501200641381(String)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,015 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - <==      Total: 0
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,043 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE consumer SET USER_NO=?,REQUEST_NO=?,FULLNAME=?,ID_NUMBER=?,AUTH_LIST=? WHERE MOBILE = ? 
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,050 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - ==> Parameters: USR_056F993E477147B88FA66E79A90BB500(String), REQ_FD1E72EB2D2C47B7B58C7832E2A66272(String), 白得(String), 544018198202247829(String), ALL(String), 15378791983(String)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,051 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - <==    Updates: 1
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,056 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,BANK_CODE,BANK_NAME,CARD_NUMBER,MOBILE,STATUS FROM bank_card WHERE CONSUMER_ID = ? 
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,057 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - ==> Parameters: 1003(Long)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,058 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - <==      Total: 0
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,065 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - ==>  Preparing: INSERT INTO bank_card ( CONSUMER_ID, CARD_NUMBER, MOBILE, STATUS ) VALUES ( ?, ?, ?, ? ) 
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,075 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - ==> Parameters: 1003(Long), 6226501200641381(String), 15378791983(String), 0(Integer)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,082 DEBUG [http-nio-53050-exec-3][BaseJdbcLogger.java:159] - <==    Updates: 1
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,453 INFO [http-nio-53050-exec-3][ChainedDynamicProperty.java:115] - Flipping property: depository-agent-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,495 INFO [http-nio-53050-exec-3][ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-depository-agent-service
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,498 INFO [http-nio-53050-exec-3][BaseLoadBalancer.java:197] - Client: depository-agent-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=depository-agent-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,516 INFO [http-nio-53050-exec-3][DynamicServerListLoadBalancer.java:222] - Using serverListUpdater PollingServerListUpdater
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,560 INFO [http-nio-53050-exec-3][ChainedDynamicProperty.java:115] - Flipping property: depository-agent-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:21,565 INFO [http-nio-53050-exec-3][DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client depository-agent-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=depository-agent-service,current list of Servers=[192.168.2.153:53070],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.2.153:53070;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3c45b3eb
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:22,531 INFO [PollingServerListUpdater-0][ChainedDynamicProperty.java:115] - Flipping property: depository-agent-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:47,634 INFO [hmilyTransaction-hmily-transaction-self-recovery-14][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:47,864 INFO [hmilyTransaction-hmily-transaction-self-recovery-28][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:54:52,706 INFO [hmilyTransaction-hmily-transaction-self-recovery-42][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:55:11,293 DEBUG [ConsumeMessageThread_1][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,USERNAME,FULLNAME,ID_NUMBER,USER_NO,MOBILE,USER_TYPE,ROLE,AUTH_LIST,IS_BIND_CARD,STATUS,LOAN_AMOUNT,REQUEST_NO FROM consumer WHERE REQUEST_NO = ? 
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:55:11,296 DEBUG [ConsumeMessageThread_1][BaseJdbcLogger.java:159] - ==> Parameters: REQ_FD1E72EB2D2C47B7B58C7832E2A66272(String)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:55:11,300 DEBUG [ConsumeMessageThread_1][BaseJdbcLogger.java:159] - <==      Total: 1
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:55:11,317 DEBUG [ConsumeMessageThread_1][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE consumer SET IS_BIND_CARD=?,STATUS=? WHERE ID = ? 
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:55:11,330 DEBUG [ConsumeMessageThread_1][BaseJdbcLogger.java:159] - ==> Parameters: 1(Integer), 1(Integer), 1003(Long)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:55:11,334 DEBUG [ConsumeMessageThread_1][BaseJdbcLogger.java:159] - <==    Updates: 1
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:55:11,351 DEBUG [ConsumeMessageThread_1][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE bank_card SET STATUS=?,BANK_CODE=?,BANK_NAME=? WHERE CONSUMER_ID = ? 
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:55:11,353 DEBUG [ConsumeMessageThread_1][BaseJdbcLogger.java:159] - ==> Parameters: 1(Integer), CEB(String), 中国光大银行(String), 1003(Long)
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:55:11,355 DEBUG [ConsumeMessageThread_1][BaseJdbcLogger.java:159] - <==    Updates: 1
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:55:47,635 INFO [hmilyTransaction-hmily-transaction-self-recovery-14][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:55:47,868 INFO [hmilyTransaction-hmily-transaction-self-recovery-28][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:55:51,924 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:55:52,717 INFO [hmilyTransaction-hmily-transaction-self-recovery-42][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:56:21,596 INFO [hmilyTransaction-hmily-transaction-self-recovery-56][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:56:47,639 INFO [hmilyTransaction-hmily-transaction-self-recovery-14][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:56:47,870 INFO [hmilyTransaction-hmily-transaction-self-recovery-28][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:56:52,721 INFO [hmilyTransaction-hmily-transaction-self-recovery-42][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:57:21,600 INFO [hmilyTransaction-hmily-transaction-self-recovery-56][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:57:47,646 INFO [hmilyTransaction-hmily-transaction-self-recovery-14][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:57:47,872 INFO [hmilyTransaction-hmily-transaction-self-recovery-28][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:57:52,724 INFO [hmilyTransaction-hmily-transaction-self-recovery-42][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:58:21,605 INFO [hmilyTransaction-hmily-transaction-self-recovery-56][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:58:47,648 INFO [hmilyTransaction-hmily-transaction-self-recovery-14][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:58:47,877 INFO [hmilyTransaction-hmily-transaction-self-recovery-28][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:58:52,728 INFO [hmilyTransaction-hmily-transaction-self-recovery-42][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:59:21,610 INFO [hmilyTransaction-hmily-transaction-self-recovery-56][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:59:47,651 INFO [hmilyTransaction-hmily-transaction-self-recovery-14][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:59:47,879 INFO [hmilyTransaction-hmily-transaction-self-recovery-28][LogUtil.java:87] - self recovery execute delayTime:60
[wanxinp2p-consumer-service][${env:SERVER_PORT}] 2019-08-16 14:59:52,730 INFO [hmilyTransaction-hmily-transaction-self-recovery-42][LogUtil.java:87] - self recovery execute delayTime:60
